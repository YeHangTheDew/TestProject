server.port=7550
server.sessionTimeout=60000
server.contextPath=/masterserv
server.maxConnections=
server.maxThreads=
server.connectionTimeout=
#trace.submitUrl=http://172.16.0.143:9411/span/adds
#是否生成在线文档
spring.createDoc=true

#可用于分布式部署的自增id的生成器需要的两个参数，控制不同机器，两个参数范围都是0-31，组合起来可最多支持部署1024台节点
id.workerId=1
id.datacenterId=1


#数据库部署模式，1表示主主，2表示主从

#数据库部署模式，1表示主主，2表示主从
spring.meta.mode=1

spring.meta.masterDriverClassName[0]=org.postgresql.Driver
spring.meta.masterUrl[0]=jdbc:postgresql://172.16.0.126:5432/xw_metadata?allowMultiQueries=true&stringtype=unspecified
spring.meta.masterUsername[0]=postgres
spring.meta.masterPassword[0]=123456

spring.meta.slaveDriverClassName[0]=org.postgresql.Driver
spring.meta.slaveUrl[0]=jdbc:postgresql://172.16.0.126:5432/xw_metadata?allowMultiQueries=true&stringtype=unspecified
spring.meta.slaveUsername[0]=postgres
spring.meta.slavePassword[0]=123456

spring.meta.maxActive=20

spring.meta.scanLocation=classpath:com/xuanwu/apaas/metasdk/dao/mapper/**/*-mapper.xml;

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.meta.initialSize=5
spring.meta.minIdle=5

# 配置获取连接等待超时的时间
spring.meta.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.meta.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.meta.minEvictableIdleTimeMillis=300000
spring.meta.validationQuery=SELECT 1
spring.meta.testWhileIdle=true
spring.meta.testOnBorrow=false
spring.meta.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小

spring.meta.poolPreparedStatements=true
spring.meta.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.meta.filters=stat
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.meta.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.meta.useGlobalDataSourceStat=true

spring.tenant.maxActive=20

spring.tenant.scanLocation=classpath:com/xuanwu/apaas/mastersdk/*-mapper.xml;com/xuanwu/apaas/rolesdk/**/*-mapper.xml;com/xuanwu/apaas/uisdk/**/*-mapper.xml;com/xuanwu/apaas/mastersdk/PlSceneCase-mapper.xml;

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.tenant.initialSize=5
spring.tenant.minIdle=5

# 配置获取连接等待超时的时间
spring.tenant.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.tenant.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.tenant.minEvictableIdleTimeMillis=300000
spring.tenant.validationQuery=SELECT 1 FROM DUAL
spring.tenant.testWhileIdle=true
spring.tenant.testOnBorrow=false
spring.tenant.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.tenant.poolPreparedStatements=true
spring.tenant.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.tenant.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.tenant.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.tenant.useGlobalDataSourceStat=true

#=====================dbrouter configuration====================================
driverClassName=org.postgresql.Driver
password=123456
username=postgres
url=jdbc:postgresql://172.16.0.126:5432/xw_platform

#配置连接池
dbrouter.dataSource=com.alibaba.druid.pool.DruidDataSource
#dbrouter.dataSource=org.apache.commons.dbcp.BasicDataSource
#数据库驱动
dbrouter.driverClassName=org.postgresql.Driver
#最大空闲数，数据库连接的最大空闲时间。超过空闲时间，数据库连接将被标记为不可用，然后被释放。设为0表示无限制
dbrouter.minIdle=
#连接池的最大数据库连接数。设为0表示无限制
dbrouter.maxActive=20
#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制
dbrouter.maxWait=
#=====================dbrouter configuration====================================

# REDIS (RedisProperties)
# database name
spring.redis.database=0
# server host
spring.redis.host=172.16.0.125
# server password
spring.redis.password=
spring.redis.port=6379
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=200
spring.redis.pool.max-wait=-1